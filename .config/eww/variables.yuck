;; VARS

;; Animations
(defvar ANIM_DURATION "300ms")

;; Bar
(defvar bar_visible true)
(defvar bar_hover false)

(defvar open_tray false)

(defvar open_powermenu false)

(defvar open_launcher false)

;; Control center
(defvar open_control_center false)

(defvar open_bright_osd false)

(defvar open_screenshot false)

(defvar recorder_audio false)
(defvar recorder_region false)

(defvar nightlight false)

(defvar power_profile "Loading...")

(defvar open_powerprofile false)

(defvar alert_disabled false)


;; Info Center
(defvar open_info_center false)


;; Osd
(defvar open_osd false)

(defvar numlock "OFF")
(defvar open_num_osd false)

(defvar capslock "OFF")
(defvar open_caps_osd false)

;; POLLS

;; Control Center
(defpoll mic_status :interval "2s" "scripts/mic status")

(defpoll bluetooth_powered :interval "1s" :initial "off"
  "bluetoothctl show | grep 'Powered' | awk '{print $2}'")

(defpoll bluetooth_icon :interval "1s" :initial "î»Š"
  "scripts/bluetooth.sh --icon")

(defpoll bluetooth_status :interval "1s" :initial "Bluetooth"
  "scripts/bluetooth.sh --status")

(defpoll bluetooth_battery :interval "60s" :initial "Bluetooth"
  "scripts/get_bluetooth_battery.sh")

(defpoll recording :interval "1s"
"pgrep 'wf-recorder' || echo false")

(defpoll br_icon :interval "0.5s" "scripts/getBrightness icon")
(defpoll br :interval "0.1s" "scripts/getBrightness br")

;; Info Center
(defpoll completeday :interval "1h" "date '+%A, %d %B'")
(defpoll lithour :interval "30m" "date +%H")
(defpoll litmin :interval "30s" "date +%M")
(defpoll calendar_day :interval "10h" "date '+%d'")
(defpoll calendar_month :interval "10h" "date '+%m")
(defpoll calendar_year :interval "10h" "date '+%Y'")
(defpoll date :interval "30s" "date '+%d %b, %I:%M %p'")
(defpoll shortday :interval "1h" "date '+%d %b %y'")
(defpoll weekday :interval "24h" "date +%A")

;; Weather
(defpoll weather-icon :interval "1h" "scripts/weather icon")
(defpoll weather-temp :interval "1h" "scripts/weather current_temp")
(defpoll weather-desc :interval "1h" "scripts/weather weather_desc")
(defpoll weather-color :interval "1h" "scripts/weather hex")
(deflisten weather :initial "null" "scripts/weather.py")

;; LISTEN

;; Workspaces
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "..." "bash ~/.config/eww/scripts/get-active-workspace")
(deflisten urgent_workspace :initial "..." "bash ~/.config/eww/scripts/get-urgent-workspaces")
(deflisten special_workspace :initial "-99" "bash ~/.config/eww/scripts/get-special-workspace")

;; Volume
(deflisten volume :initial "0"
"scripts/volume.sh")

;; Control Center
(deflisten network :initial '{"essid": "lo", "signal": ""}'
"scripts/network.sh")

(deflisten current_theme :initial "dark" 
"~/.config/hypr/scripts/theme/material/material.py --current")

;; Notifications
(deflisten notifications :initial '{"count": 0, "notifications": [], "popups": []}'
"scripts/notifications.sh current")

(deflisten do-not-disturb :initial false
  "scripts/notifications.sh getdnd")

(deflisten has-notifications :initial false
  "scripts/notifications.sh has_notifications")



;; MUSIC

(deflisten recordanim :initial "{\"disc\": 0, \"hand\": -1}" "./scripts/recordhandanim.py")
(defvar powersaving false)
(deflisten pcover "./scripts/pollcover.sh")
(deflisten picomrunning :initial true "bash -c 'if pidof picom &> /dev/null; then echo true; else echo false; fi'")
(deflisten playerctl :initial '{"song": "", "artist": "", "status": "Stopped"}' "scripts/playerctl_listener.sh")
(defvar open_musicplayer false)
